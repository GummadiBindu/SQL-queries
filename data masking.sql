/* DP-POS masked data*/
SELECT 
CASE WHEN POS.ACTIVITY_END_DT IS NULL THEN CAL.SESNSTRTDT ELSE POS.ACTIVITY_END_DT END AS "Date"
, CASE WHEN POS.BUSINESS_SEASON_CD IS NULL THEN '2023FA' ELSE POS.BUSINESS_SEASON_CD END  AS "Season"
, POS.SUPER_GEOGRAPHY_NM AS "Geography"
, POS.PRODUCT_CD AS "Product Code"
, PDD.FRANCHISE AS "Franchise"
, CASE WHEN PDD.CATEGORY_DESC LIKE '%JORDAN%' THEN 'JORDAN' ELSE PDD.CONSUMER_CONSTRUCT_GLOBAL_CONSUMER_OFFENSE_NAME END AS "Consumer"
, PDD.MERCHANDISING_CLASSIFICATION_DESC AS "Merch Class"
, PDD.PRODUCT_PLANNING_INTENDED_USE_NAME AS "Segment"
, ABS(SUM(GROSSUP_RETAILER_NET_SALES_AMT_WTD)*UNIFORM(-.1,5,RANDOM())) AS "Net Sales"
, ABS(SUM(GROSSUP_RETAILER_NET_SALES_UNITS_WTD)*UNIFORM(-.1,5,RANDOM())) AS "Net Units"
, ABS(DIV0(SUM(GROSSUP_RETAILER_NET_SALES_AMT_WTD)*UNIFORM(-.1,5,RANDOM()),SUM(GROSSUP_RETAILER_NET_SALES_UNITS_WTD)*UNIFORM(-.1,5,RANDOM()))) AS "Avg Transaction Amount"
, ABS(SUM(CASE WHEN ACTIVITY_END_DT = (SELECT DISTINCT MAX(ACTIVITY_END_DT) FROM DA_DSM_SCANALYTICS_PREPROD.STAGING.DP_POS_STYLECLR_MONTH_GEO_AGG_T) THEN (DC_ALLOCATED_QTY_WTD 
    + DC_TO_STORE_INTRANSIT_QTY_WTD
    + STORE_TO_STORE_INTRANSIT_QTY_WTD
    + GROSSUP_RETAILER_ON_HAND_INVENTORY_UNITS_WTD) ELSE 0 END)*UNIFORM(-.1,5,RANDOM())) AS "Inventory Qty"
, ABS(DIV0(
SUM(CASE WHEN ACTIVITY_END_DT = (SELECT DISTINCT MAX(ACTIVITY_END_DT) FROM DA_DSM_SCANALYTICS_PREPROD.STAGING.DP_POS_STYLECLR_MONTH_GEO_AGG_T) THEN GROSSUP_RETAILER_NET_SALES_UNITS_WTD ELSE 0 END)
,
(SUM(CASE WHEN ACTIVITY_END_DT = (SELECT DISTINCT MAX(ACTIVITY_END_DT) FROM DA_DSM_SCANALYTICS_PREPROD.STAGING.DP_POS_STYLECLR_MONTH_GEO_AGG_T) THEN GROSSUP_RETAILER_NET_SALES_UNITS_WTD ELSE 0 END)) + "Inventory Qty")*UNIFORM(-.1,5,RANDOM())) AS "Sell Through"
, ABS(DIV0(
"Inventory Qty",
(DIV0(
SUM(CASE WHEN ACTIVITY_END_DT = (SELECT DISTINCT MAX(ACTIVITY_END_DT) FROM DA_DSM_SCANALYTICS_PROD.INTEGRATED.DP_POS_STYLECLR_MONTH_GEO_AGG_T) THEN GROSSUP_RETAILER_NET_SALES_UNITS_13WK ELSE 0 END),13)))*UNIFORM(-.1,5,RANDOM())) AS "Weeks On Hand"
, ABS(SUM(DEMAND_PLAN_QTY_3_0)*UNIFORM(-.1,5,RANDOM())) AS "Forecasted Unit Qty"
, ABS(SUM(DEMAND_PLAN_DOLLARS)*UNIFORM(-.1,5,RANDOM())) AS "Forecasted $ Qty"

FROM DA_DSM_SCANALYTICS_PROD.INTEGRATED.DP_POS_STYLECLR_MONTH_GEO_AGG_T POS

LEFT JOIN (SELECT DISTINCT PRODUCT_CD
, CONSUMER_CONSTRUCT_GLOBAL_CONSUMER_OFFENSE_NAME
, FRANCHISE
, CATEGORY_DESC
, CONSUMER_CONSTRUCT_DIMENSION_NAME
, MERCHANDISING_CLASSIFICATION_DESC
, PRODUCT_PLANNING_INTENDED_USE_NAME

FROM EDA_PRODUCT_PROD.BCL_PRODUCT_LIBRARY.COMMERCIAL_ANALYTICS_GLOBAL_GTIN_INT_V) PDD ON PDD.PRODUCT_CD = POS.PRODUCT_CD

LEFT JOIN (SELECT DISTINCT CALDT, SESNSTRTDT, SESNYRCD FROM NGP_DA_PROD.POS.CAL WHERE CALTYPECD = 5) CAL ON RIGHT(CAL.SESNYRCD,4) || LEFT(CAL.SESNYRCD,2) = POS.BUSINESS_SEASON_CD

WHERE PDD.FRANCHISE IN ('DUNK','PEGASUS') AND ((POS.ACTIVITY_END_DT BETWEEN '2023-07-08' AND '2023-09-30') OR (POS.ACTIVITY_END_DT IS NULL))

GROUP BY 1,2,3,4,5,6,7,8
ORDER BY 1 DESC;



/* IP and PIFOT masked data*/
SELECT 
/*CASE WHEN POS.ACTIVITY_END_DT IS NULL THEN CAL.SESNSTRTDT ELSE POS.ACTIVITY_END_DT END AS "Date"
, CASE WHEN POS.BUSINESS_SEASON_CD IS NULL THEN '2023FA' ELSE POS.BUSINESS_SEASON_CD END  AS "Season"
*/
IP.MONTH_NBR,IP.MONTH_CD,IP.MONTH_DESC,IP.YEAR_NBR
, IP.GEO_NM AS "Geography"
, IP.PROD_CD AS "Product Code"
, PDD.FRANCHISE AS "Franchise"
, CASE WHEN PDD.CATEGORY_DESC LIKE '%JORDAN%' THEN 'JORDAN' ELSE PDD.CONSUMER_CONSTRUCT_GLOBAL_CONSUMER_OFFENSE_NAME END AS "Consumer"
, PDD.MERCHANDISING_CLASSIFICATION_DESC AS "Merch Class"
, PDD.PRODUCT_PLANNING_INTENDED_USE_NAME AS "Segment"
, PDD.CONSUMER_CONSTRUCT_DIMENSION_NAME AS "Dimension"
, PDD.PRODUCT_PLANNING_DIVISION_NAME AS "Division"
, ABS(SUM(CASE WHEN ACTIVITY_END_DT = (SELECT DISTINCT MAX(ACTIVITY_END_DT) FROM DA_DSM_SCANALYTICS_PREPROD.STAGING.DP_POS_STYLECLR_MONTH_GEO_AGG_T) THEN (DC_ALLOCATED_QTY_WTD 
    + DC_TO_STORE_INTRANSIT_QTY_WTD
    + STORE_TO_STORE_INTRANSIT_QTY_WTD
    + GROSSUP_RETAILER_ON_HAND_INVENTORY_UNITS_WTD) ELSE 0 END)*UNIFORM(-.1,5,RANDOM())) AS "Inventory Qty"
, ABS(DIV0(
SUM(CASE WHEN ACTIVITY_END_DT = (SELECT DISTINCT MAX(ACTIVITY_END_DT) FROM DA_DSM_SCANALYTICS_PREPROD.STAGING.DP_POS_STYLECLR_MONTH_GEO_AGG_T) THEN GROSSUP_RETAILER_NET_SALES_UNITS_WTD ELSE 0 END)
,
(SUM(CASE WHEN ACTIVITY_END_DT = (SELECT DISTINCT MAX(ACTIVITY_END_DT) FROM DA_DSM_SCANALYTICS_PREPROD.STAGING.DP_POS_STYLECLR_MONTH_GEO_AGG_T) THEN GROSSUP_RETAILER_NET_SALES_UNITS_WTD ELSE 0 END)) + "Inventory Qty")*UNIFORM(-.1,5,RANDOM())) AS "Sell Through"
, ABS(DIV0(
"Inventory Qty",
(DIV0(
SUM(CASE WHEN ACTIVITY_END_DT = (SELECT DISTINCT MAX(ACTIVITY_END_DT) FROM DA_DSM_SCANALYTICS_PROD.INTEGRATED.DP_POS_STYLECLR_MONTH_GEO_AGG_T) THEN GROSSUP_RETAILER_NET_SALES_UNITS_13WK ELSE 0 END),13)))*UNIFORM(-.1,5,RANDOM())) AS "Weeks On Hand"
, ABS(SUM(DEMAND_PLAN_QTY_3_0)*UNIFORM(-.1,5,RANDOM())) AS "Forecasted Unit Qty"
, ABS(SUM(DEMAND_PLAN_DOLLARS)*UNIFORM(-.1,5,RANDOM())) AS "Forecasted $ Qty"

FROM DA_DSM_SCANALYTICS_PROD.AGGREGATED.CHAI_OUTS_MONTHLY_V IP

LEFT JOIN (SELECT DISTINCT PRODUCT_CD
, CONSUMER_CONSTRUCT_GLOBAL_CONSUMER_OFFENSE_NAME
, FRANCHISE
, CATEGORY_DESC
, CONSUMER_CONSTRUCT_DIMENSION_NAME
, MERCHANDISING_CLASSIFICATION_DESC
, PRODUCT_PLANNING_INTENDED_USE_NAME

FROM EDA_PRODUCT_PROD.BCL_PRODUCT_LIBRARY.COMMERCIAL_ANALYTICS_GLOBAL_GTIN_INT_V) PDD ON PDD.PRODUCT_CD = IP.PROD_CD

LEFT JOIN (SELECT DISTINCT CALDT, SESNSTRTDT, SESNYRCD FROM NGP_DA_PROD.POS.CAL WHERE CALTYPECD = 5) CAL ON RIGHT(CAL.SESNYRCD,4) || LEFT(CAL.SESNYRCD,2) = POS.BUSINESS_SEASON_CD

WHERE PDD.FRANCHISE IN ('DUNK','PEGASUS') AND ((IP.b BETWEEN '2023-07-08' AND '2023-09-30') OR (POS.ACTIVITY_END_DT IS NULL))

GROUP BY 1,2,3,4,5,6,7,8
ORDER BY 1 DESC;

select *
from  DA_DSM_SCANALYTICS_PROD.AGGREGATED.PIFOT_T
limit 20;
desc table DA_DSM_SCANALYTICS_PROD.AGGREGATED.CHAI_OUTS_MONTHLY_V;
DESC TABLE DA_DSM_SCANALYTICS_PROD.AGGREGATED.INVENTORY_ALLOCATION_SUMMARY_DETAIL_HIST_MONTHLY_V;
DESC TABLE DA_DSM_SCANALYTICS_PROD.INTEGRATED.PERFORMANCE_T;
DESC TABLE DA_DSM_SCANALYTICS_PROD.AGGREGATED.SP_METRICS;
desc table DA_DSM_SCANALYTICS_PROD.AGGREGATED.PIFOT_T;

SELECT *
FROM DA_DSM_SCANALYTICS_PROD.AGGREGATED.INVENTORY_ALLOCATION_SUMMARY_DETAIL_HIST_MONTHLY_V
LIMIT 20;
/*
PROD_CD, GEO_NM (NEED TO SHORTEN),SEASN_YR_CD ,INVENTORY_QTY OUTS
PRODUCT_CD, SUPERGEO_CD,SEASN_YR_CD, 
STORE_TO_STORE_INTRANSIT_QTY, DC_TO_STORE_INTRANSIT_QTY,
DIGITAL_TO_STORE_INTRANSIST_QTY,STORE_TO_DIGITAL_INTRANSITQTY,
DIGITALTO DC INTRANSITY,DCTODIGITAL INTRANSIT,STORE TO DC INTRANSIT,
DCTODCINTRANSIT, INVENTORYQTY,SALESQTY,SHIPMENTQTY

*/
WITH SP_DATA AS (
SELECT BUS_SEASN_CD as Season,
(CASE WHEN PRNT_GEO_SHRT_NM IN ('ASIA PACIFIC','LATIN AMERICA','JAPAN') THEN 'APLA'
    WHEN PRNT_GEO_SHRT_NM IN ('EUAF','EURO','UNKNOWN') THEN 'EMEA'
    WHEN PRNT_GEO_SHRT_NM IN ('GREATER CHINA') THEN 'GC'
    ELSE 'NA' END) as Geography,PLNG_PRODT_CD as Product,
ABS(SUM(CURR_BUILD_ONTIME_0_QTY)*UNIFORM(-.5,2,RANDOM())) AS CURR_BUILD_ONTIME_0_QTY,
ABS(SUM(CURR_CARRY_OVER_QTY)*UNIFORM(-.5,2,RANDOM())) AS CURR_CARRY_OVER_QTY,
ABS(SUM(CURR_BUILD_EARLY_QTY) *UNIFORM(-.5,2,RANDOM())) AS CURR_BUILD_EARLY_QTY,
ABS(SUM(CURR_RELEASED_DP_QTY) *UNIFORM(-.5,2,RANDOM())) AS CURR_RELEASED_DP_QTY,
ROUND(ABS(DIV0((SUM(CURR_BUILD_ONTIME_0_QTY)+
SUM(CURR_CARRY_OVER_QTY) +
SUM(CURR_BUILD_EARLY_QTY)),SUM(CURR_RELEASED_DP_QTY))*UNIFORM(-.5,.8,RANDOM())),3) AS PIFOT

FROM DA_DSM_SCANALYTICS_PROD.AGGREGATED.SP_METRICS
WHERE BUS_SEASN_CD IN ('2023SU','2023FA')
AND BUS_SEASN_CD <> '*UNK*'
GROUP BY BUS_SEASN_CD,PRNT_GEO_SHRT_NM,PLNG_PRODT_CD
),
IP_DATA AS (
SELECT DISTINCT INV.PRODUCT_CD AS Product, 
(CASE WHEN INV.SUPERGEO_CD ='EU' THEN 'EMEA'
    WHEN INV.SUPERGEO_CD ='AP' THEN 'APLA'
    WHEN INV.SUPERGEO_CD ='CN' THEN 'GC' 
    ELSE INV.SUPERGEO_CD END) AS Geography,
INV.SEASN_YR_CD AS Season,
ROUND(SUM(CASE WHEN SNAPSHOT_DT=BOP_DATE THEN INVENTORY_QTY ELSE 0 END ),0) AS BOP_QTY,
ROUND(SUM(CASE WHEN SNAPSHOT_DT=EOP_DATE THEN INVENTORY_QTY ELSE 0 END ),0) AS EOP_QTY,
ROUND(SUM(CASE WHEN LOCATION_DESC='TRANSIT' THEN INVENTORY_QTY ELSE 0 END ),0) AS IT_QTY,
ROUND(SUM(CASE WHEN LOCATION_DESC='DC' THEN INVENTORY_QTY ELSE 0 END ),0) AS DC_QTY,
ROUND(SUM(CASE WHEN LOCATION_GROUP='STORE' THEN INVENTORY_QTY ELSE 0 END ),0) AS STORE_QTY,
ROUND(SUM(CASE WHEN LOCATION_GROUP in ('STORE','DC') THEN INVENTORY_QTY ELSE 0 END ),0) AS WOH_QTY,
ROUND(SUM(SHIPMENT_QTY),0) AS SHIPMENT_QTY,
ROUND(SUM(SALES_QTY),0) AS SALES_QTY
FROM DA_DSM_SCANALYTICS_PROD.AGGREGATED.INVENTORY_ALLOCATION_SUMMARY_DETAIL_HIST_MONTHLY_V INV
INNER JOIN 
(
SELECT DISTINCT PRODUCT_CD,SUPERGEO_CD,
SEASN_YR_CD,MIN(SNAPSHOT_DT) AS BOP_DATE, MAX(SNAPSHOT_DT) AS EOP_DATE
FROM DA_DSM_SCANALYTICS_PROD.AGGREGATED.INVENTORY_ALLOCATION_SUMMARY_DETAIL_HIST_MONTHLY_V
WHERE SEASN_YR_CD IN ('2023SU','2023FA')
GROUP BY 1,2,3
) DT
ON INV.SEASN_YR_CD=DT.SEASN_YR_CD
AND INV.PRODUCT_CD=DT.PRODUCT_CD
AND INV.SUPERGEO_CD=DT.SUPERGEO_CD
GROUP BY 1,2,3
),
SIP_data as (
SELECT 
(CONCAT('ACT',RANK () OVER (ORDER BY PDD.CONSUMER_CONSTRUCT_DIMENSION_NAME))) AS Grouping
, CASE WHEN PDD.CATEGORY_DESC LIKE '%JORDAN%' THEN 'GRP4'  
  WHEN PDD.CONSUMER_CONSTRUCT_GLOBAL_CONSUMER_OFFENSE_NAME='MENS' THEN 'GRP1' 
  WHEN PDD.CONSUMER_CONSTRUCT_GLOBAL_CONSUMER_OFFENSE_NAME='WOMENS' THEN 'GRP2'
  ELSE 'GRP3'END AS Label
, (CASE WHEN PDD.CATEGORY_DESC IN('BASKETBALL','BASKETBALL LICENSED','BASKETBALL TEAMSPORT') THEN 'EVENT B'
  WHEN PDD.CATEGORY_DESC IN('YOUNG ATHLETES SPORT','WOMENS TRAINING','JORDAN TRAINING','RUNNING TEAMSPORT',
  'ATHLETIC TRAINING OFF PRICE','TRAINING','TRAINING TEAMSPORT','WOMENS TRAINING OFF PRICE') THEN 'EVENT C'
   WHEN PDD.CATEGORY_DESC IN('JORDAN PERF BBALL','JORDAN OFF CRT BBALL','JORDAN SPORT') THEN 'EVENT D'
   WHEN PDD.CATEGORY_DESC IN('FIELD SPORTS TEAMSPORT','FIELD SPORTS') THEN 'EVENT F'
   WHEN PDD.CATEGORY_DESC IN('RUNNING','RUNNING OFF PRICE','RUNNING LICENSED') THEN 'EVENT R'
   WHEN PDD.CATEGORY_DESC IN('FOOTBALL/SOCCER LICENSED','FOOTBALL','FOOTBALL/SOCCER TRAINING','NFL FOOTBALL',
    'FOOTBALL/SOCCER','FOOTBALL/SOCCER TEAMSPORT','SOCCER') THEN 'EVENT S'
   WHEN PDD.CATEGORY_DESC ='TENNIS' THEN 'EVENT T'
    WHEN PDD.CATEGORY_DESC ='GOLF' THEN 'EVENT G'
    ELSE 'OTHER' END) AS Eventgroup
, SUBSTR(PDD.PRODUCT_PLANNING_INTENDED_USE_NAME,1,2) AS Utility
, (CASE WHEN PDD.CONSUMER_CONSTRUCT_DIMENSION_NAME='BASKETBALL'	THEN 'EVENT B'
WHEN PDD.CONSUMER_CONSTRUCT_DIMENSION_NAME='TEAM SPORTS' THEN	'EVENT F'
WHEN PDD.CONSUMER_CONSTRUCT_DIMENSION_NAME='YOGA'	THEN 'OTHER'
WHEN PDD.CONSUMER_CONSTRUCT_DIMENSION_NAME='FLIGHT' THEN	'OTHER'
WHEN PDD.CONSUMER_CONSTRUCT_DIMENSION_NAME='CLASSICS'	THEN 'EVENT C'
WHEN PDD.CONSUMER_CONSTRUCT_DIMENSION_NAME='RUNNING'	THEN 'EVENT A'
WHEN PDD.CONSUMER_CONSTRUCT_DIMENSION_NAME='GOLF & TENNIS'	THEN 'EVENT G'
WHEN PDD.CONSUMER_CONSTRUCT_DIMENSION_NAME='LEAGUE SPORTS' THEN	'OTHER'
WHEN PDD.CONSUMER_CONSTRUCT_DIMENSION_NAME='GLOBAL FOOTBALL'	THEN 'EVENT S'
ELSE 'OTHER' END) AS Class
, (CASE WHEN PDD.DIVISION_DESC='EQUIPMENT DIVISION' THEN 'LVL1' 
    WHEN PDD.DIVISION_DESC='FOOTWEAR DIVISION' THEN 'LVL2'
    WHEN PDD.DIVISION_DESC='APPAREL DIVISION' THEN 'LVL2' END) AS Level
, (CASE WHEN PDD.AGE_DESC='PRE SCHOOL' THEN	'Dem1'
    WHEN PDD.AGE_DESC='TODDLER' THEN	'Dem2'
    WHEN PDD.AGE_DESC='GRADE SCHOOL' THEN	'Dem3'
    WHEN PDD.AGE_DESC='INFANT'THEN	'Dem4'
    WHEN PDD.AGE_DESC='ADULT' THEN	'Dem5'
    WHEN PDD.AGE_DESC='CHILD' THEN	'Dem6'
    WHEN PDD.AGE_DESC='YOUTH' THEN	'Dem7'
        ELSE 'OTHER' END) AS Demogroup
, (CASE WHEN PDD.PRODUCT_TIER_DESC='Core' THEN 'STG4'
  WHEN PDD.PRODUCT_TIER_DESC= 'Pinnacle' THEN 'STG2'
  WHEN PDD.PRODUCT_TIER_DESC='Perform' THEN 'STG1'
  WHEN PDD.PRODUCT_TIER_DESC='Statement' THEN 'STG3' ELSE 'UNKNOWN' END ) AS Grade
, (CAL.SESNSTRTDT-365*4) as Date
, SP.Geography as Ngl
, concat('AZDL',reverse(substr(PDD.style_nbr,3,4))) as code
, ABS(SP.PIFOT + UNIFORM(-.5126,.2694,RANDOM()))as " Planned in full on-time"
, ABS(SHIPMENT_QTY + UNIFORM(-50,2000,RANDOM())) AS "SHIPPED UNITS"
, ABS(SALES_QTY + UNIFORM(-50,2000,RANDOM())) AS " SALES UNITS"
, ABS(IP.BOP_QTY * UNIFORM(-5,2,RANDOM())) AS "Beginning period Inventory"
, ABS(IP.EOP_QTY * UNIFORM(-5,2,RANDOM())) AS "Ending period Inventory"
, ABS(IP.IT_QTY * UNIFORM(-5,2,RANDOM())) AS "In-transit Inventory"
, ABS(IP.DC_QTY * UNIFORM(-5,2,RANDOM())) AS "DC Inventory"
, ABS(IP.WOH_QTY * UNIFORM(-5,2,RANDOM())) AS "Store Inventory"
, ABS(IP.STORE_QTY * UNIFORM(-5,2,RANDOM())) AS "Weeks on hand units"
FROM SP_DATA SP INNER JOIN
IP_DATA IP
ON SP.PRODUCT=IP.PRODUCT
AND SP.GEOGRAPHY=IP.GEOGRAPHY
AND SP.SEASON=IP.SEASON
LEFT JOIN EDA_PRODUCT_PROD.BCL_PRODUCT_LIBRARY.COMMERCIAL_ANALYTICS_GLOBAL_GTIN_INT_V PDD
ON SP.PRODUCT=PDD.PRODUCT_CD
LEFT JOIN
( SELECT DISTINCT SESNSTRTDT,SESNENDDT,SESNYRCD
FROM NGP_DA_PROD.POS.CAL
WHERE CAL.CALTYPECD='5'
) CAL
ON  CONCAT(SUBSTR(CAL.SESNYRCD,3,4),SUBSTR(CAL.SESNYRCD,1,2))=SP.SEASON
WHERE  PDD.FRANCHISE NOT IN('NO FRANCHISE')
)
/*
SELECT TOP 300000 *
FROM SIP_DATA ;
*/
/* GIDP MOCKUP*/

SELECT TOP  375000 Grouping
,  Label
,  Eventgroup
,  Utility
,  Class
,  Level
,  Demogroup
,  Grade
, (Date-365*3) as Date
,  Ngl
,  code
,  "SHIPPED UNITS" AS GROSS_SALES_QTY_LY
,  "SHIPPED UNITS" * UNIFORM(5,20,RANDOM()) AS GROSS_SALES_QTY_TY
,  "SHIPPED UNITS" * UNIFORM(5,200,RANDOM()) AS GROSS_SALES_AMT_LY
,  "SHIPPED UNITS" * UNIFORM(50,2000,RANDOM()) AS GROSS_SALES_AMT_TY
,  DIV0("SHIPPED UNITS" * UNIFORM(5,200,RANDOM()) ,"SHIPPED UNITS")AS AUR_LY
,  DIV0("SHIPPED UNITS" * UNIFORM(50,2000,RANDOM()) ,"SHIPPED UNITS" * UNIFORM(5,20,RANDOM()))AS AUR_TY
, "Ending period Inventory"* UNIFORM(5,20,RANDOM()) AS ACCESSIBLE_INVENTORY_LY
, "Ending period Inventory"* UNIFORM(10,200,RANDOM()) AS ACCESSIBLE_INVENTORY_TY
, "In-transit Inventory" * UNIFORM(0.2,4,RANDOM()) AS SELL_THRU_INVENTORY_LY
, "In-transit Inventory" * UNIFORM(2,10,RANDOM()) AS SELL_THRU_INVENTORY_TY
, "DC Inventory" * UNIFORM(10,200,RANDOM()) AS PLAN_QTY_LY
, "DC Inventory" * UNIFORM(7,150,RANDOM()) AS PLAN_QTY_TY
, "Store Inventory" * UNIFORM(10,500,RANDOM()) AS PLAN_DOLLARS_LY
, "Store Inventory" * UNIFORM(100,5000,RANDOM()) AS PLAN_DOLLARS_TY
, "Weeks on hand units" *UNIFORM(50,200,RANDOM()) AS WOH_LY
,"Weeks on hand units" * UNIFORM(500,2000,RANDOM()) AS WOH_TY
FROM SIP_DATA
;
/*
"Franchise"
,  "Consumer"
, PDD.CATEGORY_DESC AS "Category"
, PDD.PRODUCT_PLANNING_INTENDED_USE_NAME AS "Segment"
, PDD.CONSUMER_CONSTRUCT_DIMENSION_NAME AS "Product class"
, PDD.DIVISION_DESC AS Division
, PDD.AGE_DESC AS "Consumer group"
, PDD.PRODUCT_TIER_DESC AS "Product group"
, SP.Season
, CAL.SESNSTRTDT
, SP.Geography
, SP.Product as "Product code"
*/
SELECT *
FROM EDA_PRODUCT_PROD.BCL_PRODUCT_LIBRARY.COMMERCIAL_ANALYTICS_GLOBAL_GTIN_INT_V
LIMIT 20;

select *
from DA_DSM_SCANALYTICS_PROD.AGGREGATED.SP_METRICS
limit 50;
/*
SELECT DMND_SEASN_CD,PRNT_GEO_SHRT_NM,
SUM(BUILD_ONTIME_PIFOT_7_QTY) AS BUILD_ONTIME_PIFOT_7_QTY,
SUM(TOT_BUILD_EARLY_QTY) AS TOT_BUILD_EARLY_QTY,
SUM(OH_INV) AS OH_INV,
SUM() AS SNP_DMND_PLAN_QTY,
DIV0((SUM(BUILD_ONTIME_PIFOT_7_QTY)+
SUM(TOT_BUILD_EARLY_QTY)+
SUM(OH_INV)),SUM(SNP_DMND_PLAN_QTY)) AS PIFOT

FROM DA_DSM_SCANALYTICS_PROD.AGGREGATED.PIFOT_T
GROUP BY DMND_SEASN_CD,PRNT_GEO_SHRT_NM;
*/
/*
CUSTOMER CHANNEL DESCRITPTION = 'NIKE FACTORY STORES' --> 'NFS'
CUSTOMER CHANNEL DESCRITPTION = 'NIKE CONCESSION' --> 'INLINE'
CUSTOMER CHANNEL DESCRITPTION = 'NIKE COMPANY STORE' --> 'INLINE'
CUSTOMER CHANNEL DESCRITPTION = 'NIKE STORES OWNED' --> 'INLINE'
CUSTOMER CHANNEL DESCRITPTION = 'NIKE.COM' --> 'DIGITAL'
CUSTOMER CHANNEL DESCRITPTION = 'CATEGORY SPECIALTY' --> '3RD PARTY'
CUSTOMER CHANNEL DESCRITPTION = 'NIKE STORES PARTNER' --> '3RD PARTY'
CUSTOMER CHANNEL DESCRITPTION = 'OTHER CHANNEL CLASS' --> 'OTHER'
CUSTOMER CHANNEL DESCRITPTION = 'ATHLETIC SPECIALTY' --> '3RD PARTY'
CUSTOMER CHANNEL DESCRITPTION = 'SPORTING GOODS' --> '3RD PARTY'
CHANNEL GROUP = 'NSP' --> '3RD PARTY'
CHANNEL GROUP = 'UNALLOCATED' --> 'UNALLOCATED'
CHANNEL GROUP = 'WHOLESALE' --> '3RD PARTY'
CHANNEL GROUP = 'AT CONSOLIDATOR' --> 'AT CONSOLIDATOR'

*/

select *
from DA_DSM_SCANALYTICS_PROD.AGGREGATED.INVENTORY_ALLOCATION_SUMMARY_DETAIL_HIST_MONTHLY_V
limit 20;

select product_cd, reverse(product_cd) as random_pd
from DA_DSM_SCANALYTICS_PROD.AGGREGATED.INVENTORY_ALLOCATION_SUMMARY_DETAIL_HIST_MONTHLY_V
limit 20;
select distinct style_number,substr(style_number,3,4) as style,concat('ZZ',reverse(substr(style_number,3,4))) as newstyle
from DA_DSM_SCANALYTICS_PROD.AGGREGATED.INVENTORY_ALLOCATION_SUMMARY_DETAIL_HIST_MONTHLY_V
limit 50;

select *
from ngp_da_prod.pos.cal
where caltypecd='5'
and yrnbr='2023';
